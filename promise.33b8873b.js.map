{"mappings":"AAAA","sources":["src/js/promise.js"],"sourcesContent":["'use strict';\n\n/*\n * Проміси\n */\n\n//? конструктор new Promise(callback(resolve, reject));\n\n// const promise = new Promise((resolve, reject) => {\n//   setTimeout(() => {\n//     if (Math.random() > 0.5) {\n//       resolve('Done');\n//     } else {\n//       reject('Error');\n//     }\n//   }, 1000);\n// });\n\n//? then(onSuccess, onError)\n\n// promise\n//   .then(data => {\n//     console.log(`Value is ${data}`);\n//   })\n//   .then(() => {\n//     console.log(1313);\n//   })\n//   .catch(err => {\n//     console.warn(err);\n//   })\n//   .finally(() => {\n//     console.log('Finally did');\n//   });\n\n// console.log(promise);\n\n//? ланцюжок промісів та catch(onError)\n\n//? finally()\n\n//? TASK 01\n// Чи можна \"перевиконати\" проміс?\n\n// const promise = new Promise((resolve, reject) => {\n//   console.log(`ss`);\n//   resolve(1);\n\n//   setTimeout(() => {\n//     resolve(2);\n//   }, 5000);\n// });\n\n// promise.then(result => {\n//   console.log(result);\n// });\n\n//? TASK 02\n// Що буде у консолі\n\n// const promise = new Promise((resolve, reject) => {\n//   resolve('1');\n// });\n\n// promise\n//   .then(data => {\n//     console.log(data);\n//   })\n//   .then(data => {\n//     console.log(data);\n//     return '2';\n//   })\n//   .then(data => {\n//     console.log(data);\n//   });\n\n//? TASK 03\n// Що буде у консолі\n\n// const promise = new Promise((resolve, reject) => {\n//   reject('error');\n// });\n\n// promise\n//   .then(data => {\n//     console.log(data);\n//   })\n//   .then(data => {\n//     console.log(data);\n//     return '2';\n//   })\n//   .then(data => {\n//     console.log(data);\n//   })\n//   .catch(error => {\n//     console.log(error);\n//   });\n"],"names":[],"version":3,"file":"promise.33b8873b.js.map"}